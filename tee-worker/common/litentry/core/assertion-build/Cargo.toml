[package]
authors = ["Trust Computing GmbH <info@litentry.com>"]
edition = "2021"
name = "lc-assertion-build"
version = "0.1.0"

[dependencies]
blake2-rfc = { workspace = true }
http = { workspace = true, optional = true }
http_req = { workspace = true, optional = true }
rust-base58 = { workspace = true, optional = true }
ss58-registry = { workspace = true }

http-sgx = { workspace = true, optional = true }
http_req-sgx = { workspace = true, optional = true }
rust-base58-sgx = { workspace = true, optional = true }
thiserror_sgx = { workspace = true, optional = true }
sgx_tstd = { workspace = true, optional = true, features = ["net", "thread"] }

codec = { workspace = true }
hex = { workspace = true }
log = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
primitive-types = { workspace = true }

itc-rest-client = { workspace = true }
itp-ocall-api = { workspace = true }
itp-stf-primitives = { workspace = true }
itp-types = { workspace = true }
itp-utils = { workspace = true }

frame-support = { workspace = true }
sp-core = { workspace = true, features = ["full_crypto"] }

# litentry
lc-common = { workspace = true }
lc-credentials = { workspace = true }
lc-data-providers = { workspace = true }
lc-dynamic-assertion = { workspace = true }
lc-evm-dynamic-assertions = { workspace = true }
lc-stf-task-sender = { workspace = true }
litentry-primitives = { workspace = true }
pallet-parachain-staking = { workspace = true }

[dev-dependencies]
chrono = { workspace = true }
env_logger = { workspace = true }
lc-mock-server = { workspace = true }
litentry-hex-utils = { workspace = true, features = ["std"] }
ethabi = { workspace = true }
itp-test = { path = "../../../core-primitives/test", default-features = false }

[features]
default = ["std"]
sgx = [
    "http-sgx",
    "http_req-sgx",
    "rust-base58-sgx",
    "itc-rest-client/sgx",
    "sgx_tstd",
    "thiserror_sgx",
    "litentry-primitives/sgx",
    "lc-stf-task-sender/sgx",
    "lc-common/sgx",
    "lc-credentials/sgx",
    "lc-data-providers/sgx",
    "lc-dynamic-assertion/sgx",
    "lc-evm-dynamic-assertions/sgx",
    "primitive-types/codec",
    "primitive-types/serde_no_std",
]
std = [
    "http",
    "http_req",
    "itc-rest-client/std",
    "log/std",
    "serde/std",
    "serde_json/std",
    "rust-base58",
    "itp-types/std",
    "itp-utils/std",
    "frame-support/std",
    "litentry-primitives/std",
    "lc-stf-task-sender/std",
    "lc-common/std",
    "lc-credentials/std",
    "lc-data-providers/std",
    "lc-dynamic-assertion/std",
    "lc-evm-dynamic-assertions/std",
]
test = ["itp-test/sgx"]
development = []
