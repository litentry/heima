[workspace]
resolver = "2"
members = [
    # common
    "common/core-primitives/*",
    "common/core-primitives/sgx/*",
    "common/core-primitives/substrate-sgx/*",
    "common/litentry/primitives",



    # identity-worker
    # bitacross-worker
    "bitacross/app-libs/*",
    "bitacross/cli",
    "bitacross/core/direct-rpc-client",
    "bitacross/core/direct-rpc-server",
    "bitacross/core/offchain-worker-executor",
    "bitacross/core/parentchain/block-import-dispatcher",
    "bitacross/core/parentchain/block-importer",
    "bitacross/core/parentchain/indirect-calls-executor",
    "bitacross/core/parentchain/light-client",
    "bitacross/core/parentchain/parentchain-crate",
    "bitacross/core/rest-client",
    "bitacross/core/rpc-client",
    "bitacross/core/tls-websocket-server",
    "bitacross/core-primitives/attestation-handler",
    "bitacross/core-primitives/import-queue",
    "bitacross/core-primitives/component-container",
    "bitacross/core-primitives/enclave-api",
    "bitacross/core-primitives/enclave-api/ffi",
    "bitacross/core-primitives/enclave-metrics",
    "bitacross/core-primitives/extrinsics-factory",
    "bitacross/core-primitives/hashing",
    "bitacross/core-primitives/networking-utils",
    "bitacross/core-primitives/node-api",
    "bitacross/core-primitives/node-api/api-client-extensions",
    "bitacross/core-primitives/node-api/api-client-types",
    "bitacross/core-primitives/node-api/factory",
    "bitacross/core-primitives/node-api/metadata",
    "bitacross/core-primitives/node-api/metadata-provider",
    "bitacross/core-primitives/nonce-cache",
    "bitacross/core-primitives/ocall-api",
    "bitacross/core-primitives/primitives-cache",
    "bitacross/core-primitives/rpc",
    "bitacross/core-primitives/settings",
    "bitacross/core-primitives/sgx/crypto",
    "bitacross/core-primitives/sgx/io",
    "bitacross/core-primitives/sgx-runtime-primitives",
    "bitacross/core-primitives/stf-executor",
    "bitacross/core-primitives/stf-interface",
    "bitacross/core-primitives/stf-primitives",
    "bitacross/core-primitives/stf-state-handler",
    "bitacross/core-primitives/stf-state-observer",
    "bitacross/core-primitives/storage",
    "bitacross/core-primitives/substrate-sgx/environmental",
    "bitacross/core-primitives/substrate-sgx/externalities",
    "bitacross/core-primitives/substrate-sgx/sp-io",
    "bitacross/core-primitives/test",
    "bitacross/core-primitives/time-utils",
    "bitacross/core-primitives/top-pool",
    "bitacross/core-primitives/top-pool-author",
    "bitacross/core-primitives/types",
    "bitacross/core-primitives/utils",
    "bitacross/service",
    "bitacross/litentry/core/direct-call",
    "bitacross/bitacross/core/*",
]

exclude = [
    "common/core-primitives/sgx",
    "common/core-primitives/substrate-sgx",
]

[workspace.dependencies]

aes = { version = "0.6.0" }
thiserror = { version = "1.0" }
env_logger = { version = "0.10.0" }
log = { version = "0.4", default-features = false }
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive"] }
arrayvec = { version = "0.7.1", default-features = false }
bit-vec = { version = "0.6", default-features = false }
hex = { version = "0.4", default-features = false, features = ["alloc"] }
blake2-rfc = { version = "0.2.18", default-features = false }
itertools = { version = "0.10.1", default-features = false }
base58 = { version = "0.2", default-features = false }
base64 = { version = "0.13", default-features = false, features = ["alloc"] }
chrono = { version = "0.4.19", default-features = false, features = ["alloc"] }
derive_more = { version = "0.99" }
rustls = { version = "0.19" }
serde = { version = "1.0", default-features = false, features = ["derive", "alloc"] }
serde_json = { version = "1.0", default-features = false, features = ["alloc", "preserve_order"] }
webpki = { version = "0.21" }
hash-db = { version = "0.15.2", default-features = false }
bitcoin = { version = "0.31.0", default-features = false }
rand = { version = "0.7" }
ring = { version = "0.16.20", default-features = false }
scale-info = { version = "2.4.0", default-features = false, features = ["derive"] }
secp256k1 = { version = "0.28.0", default-features = false }
ofb = { version = "0.4.0" }
lazy_static = { version = "1.1.0", features = ["spin_no_std"] }
k256 = { version = "0.13.3" }
ethabi = { version = "18.0.0", default-features = false }
evm = { version = "0.41.1", default-features = false, features = ["with-codec"] }
http = { version = "0.2" }
rust_decimal = { version = "1.35.0", default-features = false }
ss58-registry = { version = "1.40", default-features = false }
rust-base58 = { version = "0.0.4" }
primitive-types = { version = "0.12.1", default-features = false }
libsecp256k1 = { version = "0.7.0", default-features = false }
postcard = { version = "0.7.2", default-features = false, features = ["alloc"] }

url = { git = "https://github.com/domenukk/rust-url", branch = "no_std", default-features = false, features = ["alloc", "no_std_net"] }
substrate-api-client = { git = "https://github.com/scs/substrate-api-client.git", branch = "polkadot-v0.9.42-tag-v0.14.0", default-features = false, features = ["sync-api"] }

# substrate
frame-metadata = { version = "15.1.0", features = ["v14"], default-features = false }
frame-system = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.42", default-features = false }
frame-support = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.42", default-features = false }
binary-merkle-tree = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42", default-features = false }
sp-runtime = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.42", default-features = false }
sp-core = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.42", default-features = false }
sp-trie = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.42", default-features = false }
sp-io = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.42", default-features = false }
sp-std = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.42", default-features = false }
sp-state-machine = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.42", default-features = false }
pallet-balances = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.42", default-features = false }

# SGX SDK
sgx_alloc = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk", tag = "v1.1.6" }
sgx_crypto_helper = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk", tag = "v1.1.6" }
sgx_libc = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk", tag = "v1.1.6" }
sgx_rand = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk", tag = "v1.1.6" }
sgx_tcrypto = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk", tag = "v1.1.6" }
sgx_tse = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk", tag = "v1.1.6" }
sgx_trts = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk", tag = "v1.1.6" }
sgx_tstd = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk", tag = "v1.1.6" }
sgx_types = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk", tag = "v1.1.6" }
sgx_ucrypto = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk", tag = "v1.1.6" }
sgx_urts = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk", tag = "v1.1.6" }

# SGX-ported crates
base64_sgx = { package = "base64", git = "https://github.com/mesalock-linux/rust-base64-sgx", rev = "sgx_1.1.3" }
chrono_sgx = { package = "chrono", git = "https://github.com/mesalock-linux/chrono-sgx" }
thiserror_sgx = { package = "thiserror", git = "https://github.com/mesalock-linux/thiserror-sgx", tag = "sgx_1.1.3" }
num-bigint = { git = "https://github.com/mesalock-linux/num-bigint-sgx" }
rustls_sgx = { package = "rustls", git = "https://github.com/mesalock-linux/rustls", rev = "sgx_1.1.3" }
serde_json_sgx = { package = "serde_json", git = "https://github.com/mesalock-linux/serde-json-sgx", tag = "sgx_1.1.3", features = ["preserve_order"] }
webpki-roots = { git = "https://github.com/mesalock-linux/webpki-roots", branch = "mesalock_sgx" }
webpki_sgx = { package = "webpki", git = "https://github.com/mesalock-linux/webpki", branch = "mesalock_sgx" }
yasna_sgx = { package = "yasna", git = "https://github.com/mesalock-linux/yasna.rs-sgx", rev = "sgx_1.1.3", default-features = false, features = ["bit-vec", "num-bigint", "chrono", "mesalock_sgx"] }
rand-sgx = { package = "rand", git = "https://github.com/mesalock-linux/rand-sgx", tag = "sgx_1.1.3", features = ["sgx_tstd"] }
serde_json-sgx = { package = "serde_json", git = "https://github.com/mesalock-linux/serde-json-sgx", tag = "sgx_1.1.3" }
rust-base58-sgx = { package = "rust-base58", git = "https://github.com/mesalock-linux/rust-base58-sgx", features = ["mesalock_sgx"] }

jsonrpc-core_sgx = { package = "jsonrpc-core", git = "https://github.com/scs/jsonrpc", branch = "no_std_v18", default-features = false }
httparse = { git = "https://github.com/integritee-network/httparse-sgx", branch = "sgx-experimental", default-features = false }
http_req = { git = "https://github.com/integritee-network/http_req", branch = "master", features = ["rust-tls"] }
http-sgx = { package = "http", git = "https://github.com/integritee-network/http-sgx", branch = "sgx-experimental" }
http_req-sgx = { package = "http_req", git = "https://github.com/integritee-network/http_req", default-features = false, features = ["rust-tls", "sgx"] }

# local
itc-parentchain-block-import-dispatcher = { path = "common/core/parentchain/block-import-dispatcher", default-features = false }
itc-parentchain-block-importer = { path = "common/core/parentchain/block-importer", default-features = false }
itc-rest-client = { path = "common/core/rest-client", default-features = false }

itp-import-queue = { path = "common/core-primitives/import-queue", default-features = false }
itp-storage = { path = "common/core-primitives/storage", default-features = false }
itp-types = { path = "common/core-primitives/types", default-features = false }
itp-utils = { path = "common/core-primitives/utils", default-features = false }
itp-sgx-crypto = { path = "common/core-primitives/sgx/crypto", default-features = false }
itp-sgx-io = { path = "common/core-primitives/sgx/io", default-features = false }
itp-sgx-temp-dir = { path = "common/core-primitives/sgx/temp-dir", default-features = false }
itp-sgx-externalities = { path = "common/core-primitives/substrate-sgx/externalities", default-features = false }
itp-stf-primitives = { path = "common/core-primitives/stf-primitives", default-features = false }
itp-sgx-runtime-primitives = { path = "common/core-primitives/sgx-runtime-primitives", default-features = false }
itp-time-utils = { path = "common/core-primitives/time-utils", default-features = false }
itp-settings = { path = "common/core-primitives/settings" }
itp-ocall-api = { path = "common/core-primitives/ocall-api", default-features = false }
itp-binary-merkle-tree = { path = "common/core-primitives/binary-merkle-tree", default-features = false }
itp-component-container = { path = "common/core-primitives/component-container", default-features = false }
itp-rpc = { path = "common/core-primitives/rpc", default-features = false }
itp-hashing = { path = "common/core-primitives/hashing", default-features = false }

# litentry
litentry-primitives = { path = "common/litentry/primitives", default-features = false }
litentry-macros = { path = "common/litentry/macros" }
pallet-identity-management-tee = { path = "common/litentry/pallets/identity-management", default-features = false }
lc-common = { path = "common/litentry/core/common", default-features = false }
lc-teebag-storage = { path = "common/litentry/core/teebag-storage", default-features = false }
lc-service = { path = "common/litentry/core/service", default-features = false }
lc-stf-task-sender = { path = "common/litentry/core/stf-task/sender", default-features = false }
lc-mock-server = { path = "common/litentry/core/mock-server" }
lc-credentials = { path = "common/litentry/core/credentials", default-features = false }
lc-dynamic-assertion = { path = "common/litentry/core/dynamic-assertion", default-features = false }
lc-evm-dynamic-assertions = { path = "common/litentry/core/evm-dynamic-assertions", default-features = false }
litentry-hex-utils = { path = "../common/utils/hex", default-features = false }

pallet-teebag = { git = "https://github.com/litentry/litentry-parachain", branch = "release-v0.9.19", default-features = false }
pallet-parachain-staking = { git = "https://github.com/litentry/litentry-parachain", branch = "release-v0.9.19", default-features = false }
parentchain-primitives = { package = "core-primitives", git = "https://github.com/litentry/litentry-parachain", branch = "release-v0.9.19", default-features = false }