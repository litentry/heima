[package]
authors = ["Trust Computing GmbH <info@litentry.com>"]
edition = "2021"
name = "lc-stf-task-receiver"
version = "0.1.0"

[dependencies]
futures = { workspace = true, optional = true }
thiserror = { workspace = true, optional = true }

futures_sgx = { workspace = true, optional = true }
sgx_tstd = { workspace = true, features = ["net", "thread"], optional = true }
thiserror_sgx = { workspace = true, optional = true }

codec = { package = "parity-scale-codec", workspace = true }
hex = { workspace = true }
log = { workspace = true }
sp-core = { workspace = true, features = ["full_crypto"] }

ita-stf = { package = "id-ita-stf", path = "../../../../app-libs/stf", default-features = false }
itp-enclave-metrics = { workspace = true }
itp-ocall-api = { workspace = true }
itp-sgx-crypto = { workspace = true }
itp-sgx-externalities = { workspace = true }
itp-stf-executor = { package = "id-itp-stf-executor", path = "../../../../core-primitives/stf-executor", default-features = false }
itp-stf-primitives = { workspace = true }
itp-stf-state-handler = { workspace = true }
itp-top-pool-author = { package = "id-itp-top-pool-author", path = "../../../../core-primitives/top-pool-author", default-features = false }
itp-types = { workspace = true }
itp-utils = { workspace = true }

frame-support = { workspace = true }
ita-sgx-runtime = { package = "id-ita-sgx-runtime", path = "../../../../app-libs/sgx-runtime", default-features = false }
lc-assertion-build = { workspace = true }
lc-assertion-build-v2 = { workspace = true }
lc-credentials = { workspace = true }
lc-data-providers = { workspace = true }
lc-dynamic-assertion = { workspace = true }
lc-evm-dynamic-assertions = { workspace = true }
lc-identity-verification = { workspace = true }
lc-stf-task-sender = { workspace = true }
litentry-primitives = { workspace = true }

[dev-dependencies]
sgx_crypto_helper = { workspace = true }
itp-test = { workspace = true, features = ["std"] }
itp-top-pool-author = { package = "id-itp-top-pool-author", path = "../../../../core-primitives/top-pool-author", features = ["mocks"] }
itp-top-pool = { package = "id-itp-top-pool", path = "../../../../core-primitives/top-pool", features = ["mocks"] }
itp-stf-executor = { package = "id-itp-stf-executor", path = "../../../../core-primitives/stf-executor", features = ["mocks"] }
itp-sgx-crypto = { workspace = true, features = ["std"] }
base58 = { workspace = true }
jsonrpc-core = { version = "18" }
lazy_static = { version = "1.1.0" }
hex = { workspace = true, features = ["std"] }

[features]
default = ["std"]
sgx = [
    "futures_sgx",
    "sgx_tstd",
    "thiserror_sgx",
    "ita-stf/sgx",
    "itp-sgx-externalities/sgx",
    "itp-stf-executor/sgx",
    "itp-stf-state-handler/sgx",
    "itp-top-pool-author/sgx",
    "sp-core/full_crypto",
    "litentry-primitives/sgx",
    "lc-stf-task-sender/sgx",
    "lc-identity-verification/sgx",
    "lc-assertion-build/sgx",
    "lc-assertion-build-v2/sgx",
    "lc-credentials/sgx",
    "lc-data-providers/sgx",
    "lc-evm-dynamic-assertions/sgx",
    "lc-dynamic-assertion/sgx",
]
std = [
    "futures",
    "log/std",
    "thiserror",
    "ita-stf/std",
    "itp-types/std",
    "itp-top-pool-author/std",
    "itp-utils/std",
    "itp-stf-executor/std",
    "itp-stf-state-handler/std",
    "itp-stf-primitives/std",
    "sp-core/std",
    "litentry-primitives/std",
    "lc-stf-task-sender/std",
    "lc-identity-verification/std",
    "lc-assertion-build/std",
    "lc-assertion-build-v2/std",
    "ita-sgx-runtime/std",
    "frame-support/std",
    "lc-credentials/std",
    "lc-data-providers/std",
    "lc-evm-dynamic-assertions/std",
    "lc-dynamic-assertion/std",
]
