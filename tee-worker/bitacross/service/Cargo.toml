[package]
name = 'bitacross-worker'
version = '0.1.0'
authors = ['Trust Computing GmbH <info@litentry.com>', 'Integritee AG <hello@integritee.network>']
build = 'build.rs'
edition = '2021'

[dependencies]
async-trait = "0.1.50"
base58 = "0.2"
clap = { version = "2.33", features = ["yaml"] }
codec = { package = "parity-scale-codec", workspace = true }
dirs = "3.0.2"
env_logger = { workspace = true }
futures = { workspace = true, features = ["std"] }
hex = { workspace = true, features = ["std"] }
humantime = "2.1"
jsonrpsee = { version = "0.2.0", features = ["client", "ws-server", "macros"] }
lazy_static = { workspace = true }
log = { workspace = true, features = ["std"] }
parking_lot = "0.12.1"
parse_duration = "2.1.1"
prometheus = { version = "0.13.0", features = ["process"], default-features = false } # Enabling std lead to protobuf dependency conflicts with substrate, and we don't need it.
rayon = "1.10.0"
regex = "1.9.5"
scale-info = { workspace = true }
serde = { workspace = true, features = ["std"] }
serde_derive = { workspace = true }
serde_json = { workspace = true, features = ["std"] }
thiserror = { workspace = true }
tokio = { version = "1.6.1", features = ["full"] }
url = "2.5.0"
warp = "=0.3.5"

# ipfs
ipfs-api = "0.11.0"

sgx_crypto_helper = { workspace = true, features = ["ucrypto_help"] }
sgx_types = { workspace = true }

ita-parentchain-interface = { path = "../app-libs/parentchain-interface" }
itp-enclave-api = { path = "../core-primitives/enclave-api" }

itc-parentchain = { path = "../core/parentchain/parentchain-crate" }
itc-rest-client = { workspace = true, features = ["std"] }
itc-rpc-client = { workspace = true }
itp-api-client-types = { workspace = true, features = ["std"] }
itp-enclave-metrics = { workspace = true, features = ["std"] }
itp-node-api = { workspace = true, features = ["std"] }
itp-settings = { workspace = true }
itp-stf-interface = { workspace = true, features = ["std"] }
itp-storage = { workspace = true, features = ["std"] }
itp-time-utils = { workspace = true, features = ["std"] }
itp-types = { workspace = true, features = ["std"] }
itp-utils = { workspace = true, features = ["std"] }

substrate-api-client = { workspace = true }

frame-support = { workspace = true, features = ["std"] }
sp-consensus-grandpa = { workspace = true, features = ["std"] }
sp-core = { workspace = true, features = ["std", "full_crypto"] }
sp-keyring = { workspace = true }
sp-runtime = { workspace = true, features = ["std"] }

# litentry
config = "0.13.3"
litentry-primitives = { workspace = true, features = ["std"] }

[features]
default = []
offchain-worker = ["itp-settings/offchain-worker"]
development = [
    "itp-settings/development",
    "litentry-primitives/development",
]
dcap = []
attesteer = ["dcap"]
# Must be enabled to build a binary and link it with the enclave successfully.
# This flag is set in the makefile.
#
# Must not be enabled to run cargo test without an sgx-sdk providing environment
# https://github.com/rust-lang/cargo/issues/2549.
#
# It has been chosen to not make this a default feature because this makes test execution
# more ergonomic as we can simply do `cargo test` on the whole workspace like this.
link-binary = [
    "itp-enclave-api/implement-ffi",
]

[dev-dependencies]
# crates.io
anyhow = "1.0.40"
mockall = "0.11"
# local
itc-parentchain-test = { workspace = true, features = ["std"] }
itp-sgx-crypto = { workspace = true, features = ["std"] }
