[package]
name = "ita-parentchain-interface"
version = "0.1.0"
authors = ["Integritee AG <hello@integritee.network>"]
edition = "2021"

[dependencies]
sgx_tstd = { workspace = true, optional = true }

ita-sgx-runtime = { path = "../sgx-runtime", default-features = false }
ita-stf = { path = "../stf", default-features = false }
itc-parentchain-indirect-calls-executor = { path = "../../core/parentchain/indirect-calls-executor", default-features = false }
itp-api-client-types = { workspace = true }
itp-node-api = { workspace = true }
itp-stf-primitives = { workspace = true }
itp-types = { workspace = true }

codec = { package = "parity-scale-codec", workspace = true }
log = { workspace = true }

substrate-api-client = { workspace = true, optional = true }
sp-core = { workspace = true, features = ["full_crypto"] }
sp-runtime = { workspace = true }

# litentry
bc-enclave-registry = { path = "../../bitacross/core/bc-enclave-registry", default-features = false }
bc-relayer-registry = { path = "../../bitacross/core/bc-relayer-registry", default-features = false }
bc-signer-registry = { path = "../../bitacross/core/bc-signer-registry", default-features = false }
litentry-primitives = { workspace = true }
sp-std = { workspace = true }

[dev-dependencies]
env_logger = { workspace = true }
itp-node-api = { workspace = true, features = ["std", "mocks"] }
itp-sgx-crypto = { workspace = true, features = ["std", "mocks"] }
itp-test = { workspace = true, features = ["std"] }
itp-stf-executor = { path = "../../core-primitives/stf-executor", features = ["std", "mocks"] }
itp-top-pool-author = { path = "../../core-primitives/top-pool-author", features = ["std", "mocks"] }
itc-parentchain-test = { workspace = true, features = ["std"] }

[features]
default = ["std"]
std = [
    "codec/std",
    "ita-sgx-runtime/std",
    "ita-stf/std",
    "itc-parentchain-indirect-calls-executor/std",
    "itp-api-client-types/std",
    "itp-node-api/std",
    "itp-sgx-crypto/std",
    "itp-stf-executor/std",
    "itp-stf-primitives/std",
    "itp-top-pool-author/std",
    "itp-types/std",
    "log/std",
    "sp-core/std",
    "sp-runtime/std",
    "substrate-api-client",
    "litentry-primitives/std",
    "sp-std/std",
    "bc-enclave-registry/std",
    "bc-relayer-registry/std",
    "bc-signer-registry/std",
]
sgx = [
    "sgx_tstd",
    "ita-stf/sgx",
    "itc-parentchain-indirect-calls-executor/sgx",
    "itp-node-api/sgx",
    "itp-sgx-crypto/sgx",
    "itp-stf-executor/sgx",
    "itp-top-pool-author/sgx",
    "litentry-primitives/sgx",
    "bc-enclave-registry/sgx",
    "bc-relayer-registry/sgx",
    "bc-signer-registry/sgx",
]
