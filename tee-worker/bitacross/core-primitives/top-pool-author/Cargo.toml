[package]
name = "itp-top-pool-author"
version = "0.1.0"
authors = ['Trust Computing GmbH <info@litentry.com>', 'Integritee AG <hello@integritee.network>']
edition = "2021"

[dependencies]
sgx_tstd = { workspace = true, optional = true }

itp-enclave-metrics = { workspace = true }
itp-ocall-api = { workspace = true }
itp-sgx-crypto = { workspace = true }
itp-stf-primitives = { workspace = true }
itp-stf-state-handler = { workspace = true }
itp-test = { workspace = true, optional = true }
itp-top-pool = { path = "../top-pool", default-features = false }
itp-types = { workspace = true }
itp-utils = { workspace = true }
litentry-primitives = { workspace = true }

jsonrpc-core = { workspace = true, optional = true }
jsonrpc-core_sgx = { workspace = true, optional = true }

codec = { package = "parity-scale-codec", workspace = true }
derive_more = { workspace = true }
lazy_static = { workspace = true, optional = true }
log = { workspace = true }

sp-core = { workspace = true, features = ["full_crypto"] }
sp-runtime = { workspace = true }

[dev-dependencies]
futures = { workspace = true }
itp-sgx-crypto = { workspace = true, features = ["mocks"] }
itp-test = { workspace = true, features = ["std"] }
itp-top-pool = { path = "../top-pool", features = ["std", "mocks"] }
sgx_crypto_helper = { workspace = true }
sp-keyring = { workspace = true }

[features]
default = ["std"]
std = [
    "itp-sgx-crypto/std",
    "itp-enclave-metrics/std",
    "itp-ocall-api/std",
    "itp-stf-state-handler/std",
    "itp-top-pool/std",
    "itp-types/std",
    "jsonrpc-core",
    "log/std",
    "litentry-primitives/std",
    "itp-utils/std",
    "sgx_crypto_helper/default",
]
sgx = [
    "sgx_tstd",
    "jsonrpc-core_sgx",
    "itp-enclave-metrics/sgx",
    "itp-sgx-crypto/sgx",
    "itp-stf-state-handler/sgx",
    "itp-top-pool/sgx",
    "litentry-primitives/sgx",
    "sgx_crypto_helper/mesalock_sgx",
]
test = ["itp-test/sgx", "itp-top-pool/mocks"]
mocks = ["lazy_static"]
sidechain = []
offchain-worker = []
