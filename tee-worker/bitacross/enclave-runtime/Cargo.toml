[package]
name = "enclave-runtime"
version = "0.0.1"
authors = ['Trust Computing GmbH <info@litentry.com>', 'Integritee AG <hello@integritee.network>']
edition = "2021"

[workspace]
resolver = "2"
members = []

[lib]
name = "enclave_runtime"
crate-type = ["staticlib"]

[features]
default = []
development = [
    "ita-stf/development",
    "itp-settings/development",
    "itp-attestation-handler/development",
    "litentry-primitives/development",
    "litentry-macros/development",
    "bc-task-processor/development",
]
offchain-worker = [
    "itp-settings/offchain-worker",
    "itp-top-pool-author/offchain-worker",
]
test = [
    "ita-stf/test",
    "itc-parentchain/test",
    "itp-attestation-handler/test",
    "itp-extrinsics-factory/mocks",
    "itp-sgx-crypto/test",
    "itp-sgx-temp-dir",
    "itp-stf-executor/test",
    "itp-stf-executor/mocks",
    "itp-stf-state-handler/test",
    "itp-stf-state-observer/mocks",
    "itp-storage/test",
    "itp-test/sgx",
    "itp-top-pool-author/test",
    "itp-top-pool-author/mocks",
    "bc-musig2-ceremony/sgx-test",
]
dcap = []

[target.'cfg(not(target_env = "sgx"))'.dependencies]
sgx_crypto_helper = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git", default-features = false, features = ["mesalock_sgx"] }
sgx_rand = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_serialize = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_serialize_derive = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_tcrypto = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_trts = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_tse = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_tseal = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_tstd = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git", features = ["untrusted_fs", "net", "backtrace"] }
sgx_tunittest = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_types = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }

[dependencies]
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive"] }
derive_more = { version = "0.99.5" }
futures_sgx = { package = "futures", git = "https://github.com/mesalock-linux/futures-rs-sgx" }
hex = { version = "0.4.3", default-features = false, features = ["alloc"] }
ipfs-unixfs = { default-features = false, git = "https://github.com/whalelephant/rust-ipfs", branch = "w-nstd" }
lazy_static = { version = "1.1.0", features = ["spin_no_std"] }
primitive-types = { version = "0.12.1", default-features = false, features = ["codec", "serde_no_std"] }
url = { git = "https://github.com/integritee-network/rust-url", branch = "sgx-no-std", default-features = false, features = ["alloc"] }

# scs / integritee
jsonrpc-core = { default-features = false, git = "https://github.com/scs/jsonrpc", branch = "no_std_v18" }

# mesalock
env_logger = { git = "https://github.com/integritee-network/env_logger-sgx" }
log = { git = "https://github.com/integritee-network/log-sgx" }
# Todo #1313: use the `once_cell` included in rusts core library once we use rust v1.70.0
once_cell = { git = "https://github.com/mesalock-linux/once_cell-sgx" }
rustls = { rev = "sgx_1.1.3", features = ["dangerous_configuration"], git = "https://github.com/mesalock-linux/rustls" }
serde_json = { tag = "sgx_1.1.3", git = "https://github.com/mesalock-linux/serde-json-sgx" }
webpki = { git = "https://github.com/mesalock-linux/webpki", branch = "mesalock_sgx" }

# for attestation
base58 = { rev = "sgx_1.1.3", package = "rust-base58", default-features = false, features = ["mesalock_sgx"], git = "https://github.com/mesalock-linux/rust-base58-sgx" }

cid = { default-features = false, git = "https://github.com/whalelephant/rust-cid", branch = "nstd" }
multibase = { default-features = false, git = "https://github.com/whalelephant/rust-multibase", branch = "nstd" }

# local deps
ita-parentchain-interface = { package = "bc-ita-parentchain-interface", path = "../app-libs/parentchain-interface", default-features = false, features = ["sgx"] }
ita-sgx-runtime = { package = "bc-ita-sgx-runtime", path = "../app-libs/sgx-runtime", default-features = false }
ita-stf = { package = "bc-ita-stf", path = "../app-libs/stf", default-features = false, features = ["sgx"] }
itc-direct-rpc-server = { package = "bc-itc-direct-rpc-server", path = "../core/direct-rpc-server", default-features = false, features = ["sgx"] }
itc-offchain-worker-executor = { package = "bc-itc-offchain-worker-executor", path = "../core/offchain-worker-executor", default-features = false, features = ["sgx"] }
itc-parentchain = { package = "bc-itc-parentchain", path = "../core/parentchain/parentchain-crate", default-features = false, features = ["sgx"] }
itc-parentchain-light-client = { path = "../../common/core/parentchain/light-client", default-features = false }
itc-parentchain-test = { path = "../../common/core/parentchain/test", default-features = false }
itc-tls-websocket-server = { path = "../../common/core/tls-websocket-server", default-features = false, features = ["sgx"] }
itp-attestation-handler = { path = "../../common/core-primitives/attestation-handler", default-features = false, features = ["sgx"] }
itp-component-container = { path = "../../common/core-primitives/component-container", default-features = false, features = ["sgx"] }
itp-extrinsics-factory = { path = "../../common/core-primitives/extrinsics-factory", default-features = false, features = ["sgx"] }
itp-import-queue = { path = "../../common/core-primitives/import-queue", default-features = false, features = ["sgx"] }
itp-node-api = { path = "../../common/core-primitives/node-api", default-features = false, features = ["sgx"] }
itp-node-api-metadata = { path = "../../common/core-primitives/node-api/metadata", default-features = false }
itp-node-api-metadata-provider = { path = "../../common/core-primitives/node-api/metadata-provider", default-features = false }
itp-nonce-cache = { path = "../../common/core-primitives/nonce-cache", default-features = false, features = ["sgx"] }
itp-ocall-api = { path = "../../common/core-primitives/ocall-api", default-features = false }
itp-primitives-cache = { path = "../../common/core-primitives/primitives-cache", default-features = false, features = ["sgx"] }
itp-rpc = { path = "../../common/core-primitives/rpc", default-features = false, features = ["sgx"] }
itp-settings = { path = "../../common/core-primitives/settings" }
itp-sgx-crypto = { path = "../../common/core-primitives/sgx/crypto", default-features = false, features = ["sgx"] }
itp-sgx-externalities = { path = "../../common/core-primitives/substrate-sgx/externalities", default-features = false, features = ["sgx"] }
itp-stf-executor = { package = "bc-itp-stf-executor", path = "../core-primitives/stf-executor", default-features = false, features = ["sgx"] }
itp-stf-interface = { path = "../../common/core-primitives/stf-interface", default-features = false }
itp-stf-primitives = { path = "../../common/core-primitives/stf-primitives", default-features = false }
itp-stf-state-handler = { path = "../../common/core-primitives/stf-state-handler", default-features = false, features = ["sgx"] }
itp-stf-state-observer = { path = "../../common/core-primitives/stf-state-observer", default-features = false, features = ["sgx"] }
itp-storage = { path = "../../common/core-primitives/storage", default-features = false, features = ["sgx"] }
itp-test = { path = "../../common/core-primitives/test", default-features = false, optional = true }
itp-top-pool = { package = "bc-itp-top-pool", path = "../core-primitives/top-pool", default-features = false, features = ["sgx"] }
itp-top-pool-author = { package = "bc-itp-top-pool-author", path = "../core-primitives/top-pool-author", default-features = false, features = ["sgx"] }
itp-types = { path = "../../common/core-primitives/types", default-features = false }
itp-utils = { path = "../../common/core-primitives/utils", default-features = false }

# litentry
bc-enclave-registry = { path = "../bitacross/core/bc-enclave-registry", default-features = false, features = ["sgx"] }
bc-musig2-ceremony = { path = "../bitacross/core/bc-musig2-ceremony", default-features = false, features = ["sgx"] }
bc-relayer-registry = { path = "../bitacross/core/bc-relayer-registry", default-features = false, features = ["sgx"] }
bc-signer-registry = { path = "../bitacross/core/bc-signer-registry", default-features = false, features = ["sgx"] }
bc-task-sender = { path = "../bitacross/core/bc-task-sender", default-features = false, features = ["sgx"] }
lc-direct-call = { path = "../litentry/core/direct-call", default-features = false }
litentry-hex-utils = { path = "../../../common/utils/hex", default-features = false }
litentry-macros = { path = "../../../common/primitives/core/macros", default-features = false }
litentry-primitives = { path = "../../common/litentry/primitives", default-features = false, features = ["sgx"] }
litentry-proc-macros = { path = "../../../common/primitives/core/proc-macros", default-features = false }

# bitacross
bc-task-processor = { path = "../bitacross/core/bc-task-processor", default-features = false, features = ["sgx"] }

# substrate deps
frame-support = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.42", default-features = false }
sp-core = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.42", default-features = false, features = ["full_crypto"] }
sp-runtime = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.42", default-features = false }

# test-deps
itp-sgx-temp-dir = { path = "../../common/core-primitives/sgx/temp-dir", default-features = false, optional = true }

[patch.crates-io]
env_logger = { git = "https://github.com/integritee-network/env_logger-sgx" }
log = { git = "https://github.com/integritee-network/log-sgx" }
ring = { git = "https://github.com/betrusted-io/ring-xous", branch = "0.16.20-cleanup" }

[patch."https://github.com/mesalock-linux/log-sgx"]
log = { git = "https://github.com/integritee-network/log-sgx" }

[patch."https://github.com/paritytech/substrate"]
sp-io = { path = "../../common/core-primitives/substrate-sgx/sp-io" }

[patch."https://github.com/apache/teaclave-sgx-sdk.git"]
sgx_alloc = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_crypto_helper = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_libc = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_rand = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_serialize = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_serialize_derive = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_serialize_derive_internals = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_tcrypto = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_tcrypto_helper = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_trts = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_tse = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_tseal = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_tstd = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_tunittest = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_types = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
