[package]
name = "bc-task-processor"
authors = ["Trust Computing GmbH <info@litentry.com>"]
version = "0.1.0"
edition = "2021"

[dependencies]
futures_sgx = { workspace = true, optional = true }
thiserror = { workspace = true, optional = true }
thiserror_sgx = { workspace = true, optional = true }
threadpool = { workspace = true, optional = true }

sgx_tstd = { workspace = true, features = ["net", "thread"], optional = true }
threadpool_sgx = { workspace = true, optional = true }

codec = { package = "parity-scale-codec", workspace = true }
frame-support = { workspace = true }
log = { workspace = true }

ita-stf = { path = "../../../app-libs/stf", default-features = false }
itp-enclave-metrics = { workspace = true }
itp-ocall-api = { workspace = true }
itp-sgx-crypto = { workspace = true }
itp-sgx-externalities = { workspace = true }
itp-stf-executor = { path = "../../../core-primitives/stf-executor", default-features = false }
itp-stf-state-handler = { workspace = true }

bc-enclave-registry = { path = "../bc-enclave-registry", default-features = false }
bc-musig2-ceremony = { path = "../bc-musig2-ceremony", default-features = false }
bc-musig2-event = { path = "../bc-musig2-event", default-features = false }
bc-relayer-registry = { path = "../bc-relayer-registry", default-features = false }
bc-signer-registry = { path = "../bc-signer-registry", default-features = false }
bc-task-sender = { path = "../bc-task-sender", default-features = false }
itc-direct-rpc-client = { path = "../../../core/direct-rpc-client", default-features = false }
itc-direct-rpc-server = { path = "../../../core/direct-rpc-server", default-features = false }
lc-direct-call = { path = "../../../litentry/core/direct-call", default-features = false }
litentry-primitives = { workspace = true }

sgx_crypto_helper = { workspace = true }
sp-core = { workspace = true, features = ["full_crypto"] }

[features]
default = ["std"]
sgx = [
    "threadpool_sgx",
    "sgx_tstd",
    "bc-musig2-ceremony/sgx",
    "bc-musig2-event/sgx",
    "bc-task-sender/sgx",
    "bc-enclave-registry/sgx",
    "bc-relayer-registry/sgx",
    "bc-signer-registry/sgx",
    "lc-direct-call/sgx",
    "litentry-primitives/sgx",
    "ita-stf/sgx",
    "itp-enclave-metrics/sgx",
    "itp-sgx-crypto/sgx",
    "itp-sgx-externalities/sgx",
    "itp-stf-executor/sgx",
    "itp-stf-state-handler/sgx",
    "thiserror_sgx",
    "futures_sgx",
    "itc-direct-rpc-server/sgx",
    "itc-direct-rpc-client/sgx",
    "sgx_crypto_helper/mesalock_sgx",
]
std = [
    "threadpool",
    "log/std",
    "bc-musig2-ceremony/std",
    "bc-musig2-event/std",
    "bc-task-sender/std",
    "bc-enclave-registry/std",
    "bc-relayer-registry/std",
    "bc-signer-registry/std",
    "lc-direct-call/std",
    "litentry-primitives/std",
    "ita-stf/std",
    "itp-enclave-metrics/std",
    "itp-ocall-api/std",
    "itp-sgx-crypto/std",
    "itp-sgx-externalities/std",
    "itp-stf-executor/std",
    "itp-stf-state-handler/std",
    "thiserror",
    "itc-direct-rpc-server/std",
    "itc-direct-rpc-client/std",
    "sgx_crypto_helper/default",
]
development = []
