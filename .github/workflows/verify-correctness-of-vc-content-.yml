name: Verify the correctness of VC content

on:
  workflow_dispatch:
    inputs:
      docker-tag:
        description: "an existing docker tag (e.g. v0.9.18)"
        required: true
        default: "latest"
  schedule:
    - cron: '0 12 * * 3,5' # Run every Wednesday and Friday at 12:00 UTC
    
jobs:
  test-data-provider:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set ENV
        run: |
          if [ "${GITHUB_EVENT_NAME}" = "workflow_dispatch" ]; then
            echo "DOCKER_TAG=${{ inputs.docker-tag }}" >> $GITHUB_ENV
          else
            echo "DOCKER_TAG=latest" >> $GITHUB_ENV
          fi
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}

      - name: Pull litentry image optionally
        run: |
          docker pull parity/polkadot
          docker pull litentry/identity-worker:$DOCKER_TAG
          docker pull litentry/identity-cli:$DOCKER_TAG
          docker pull litentry/litentry-parachain:$DOCKER_TAG

      - name: Re-tag docker image
        run: |
          docker tag litentry/identity-worker:$DOCKER_TAG litentry/identity-worker:latest
          docker tag litentry/identity-cli:$DOCKER_TAG litentry/identity-cli:latest
          docker tag litentry/litentry-parachain:$DOCKER_TAG litentry/litentry-parachain:latest

      - run: docker images --all

      - name: Enable corepack and pnpm
        run: corepack enable && corepack enable pnpm

      - name: Generate parachain artefacts
        run: |
          ./tee-worker/scripts/litentry/generate_parachain_artefacts.sh

      - name: Build litentry parachain docker images
        run: |
          cd tee-worker/docker
          docker compose -f litentry-parachain.build.yml build

      - name: Run data-provider-test
        run: |
          cd tee-worker/docker
          docker compose -f docker-compose.yml -f lit-data-provider-test.yml up --no-build --exit-code-from lit-data-provider-test lit-data-provider-test

      - name: Stop docker containers
        run: |
          cd tee-worker/docker
          docker compose -f docker-compose.yml -f lit-data-provider-test.yml stop

      - name: Collect Docker Logs
        continue-on-error: true
        if: always()
        uses: jwalton/gh-docker-logs@v2
        with:
          tail: all
          dest: logs

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-lit-data-provider-test
          path: logs
          if-no-files-found: ignore
