[package]
name = "bc-task-receiver"
authors = ["Trust Computing GmbH <info@litentry.com>"]
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# std dependencies
thiserror = { version = "1.0.26", optional = true }
threadpool = { version = "1.8.0", optional = true }

thiserror_sgx = { package = "thiserror", git = "https://github.com/mesalock-linux/thiserror-sgx", tag = "sgx_1.1.3", optional = true }

futures_sgx = { package = "futures", git = "https://github.com/mesalock-linux/futures-rs-sgx", optional = true }

# sgx dependencies
sgx_tstd = { git = "https://github.com/apache/teaclave-sgx-sdk.git", branch = "master", features = ["net", "thread"], optional = true }
threadpool_sgx = { git = "https://github.com/mesalock-linux/rust-threadpool-sgx", package = "threadpool", tag = "sgx_1.1.3", optional = true }

# no_std dependencies
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive"] }
hex = { version = "0.4.3", default-features = false }
log = { version = "0.4", default-features = false }

# internal dependencies 
frame-support = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }

ita-stf = { path = "../../../app-libs/stf", default-features = false }
itp-ocall-api = { path = "../../../core-primitives/ocall-api", default-features = false }
itp-sgx-crypto = { path = "../../../core-primitives/sgx/crypto", default-features = false }
itp-sgx-externalities = { path = "../../../core-primitives/substrate-sgx/externalities", default-features = false }
itp-stf-executor = { path = "../../../core-primitives/stf-executor", default-features = false }
itp-stf-state-handler = { path = "../../../core-primitives/stf-state-handler", default-features = false }
itp-utils = { path = "../../../core-primitives/utils", default-features = false }

# litentry primities
bc-enclave-registry = { path = "../bc-enclave-registry", default-features = false }
bc-musig2-ceremony = { path = "../bc-musig2-ceremony", default-features = false }
bc-relayer-registry = { path = "../bc-relayer-registry", default-features = false }
bc-signer-registry = { path = "../bc-signer-registry", default-features = false }
lc-direct-call = { path = "../../../litentry/core/direct-call", default-features = false }
litentry-primitives = { path = "../../../litentry/primitives", default-features = false }

bc-task-sender = { path = "../bc-task-sender", default-features = false }

[features]
default = ["std"]
sgx = [
    "threadpool_sgx",
    "sgx_tstd",
    "bc-musig2-ceremony/sgx",
    "bc-task-sender/sgx",
    "bc-enclave-registry/sgx",
    "bc-relayer-registry/sgx",
    "bc-signer-registry/sgx",
    "lc-direct-call/sgx",
    "litentry-primitives/sgx",
    "ita-stf/sgx",
    "itp-sgx-crypto/sgx",
    "itp-sgx-externalities/sgx",
    "itp-stf-executor/sgx",
    "itp-stf-state-handler/sgx",
    "thiserror_sgx",
    "futures_sgx",
]
std = [
    "threadpool",
    "log/std",
    "bc-musig2-ceremony/std",
    "bc-task-sender/std",
    "bc-enclave-registry/std",
    "bc-relayer-registry/std",
    "bc-signer-registry/std",
    "lc-direct-call/std",
    "litentry-primitives/std",
    "ita-stf/std",
    "itp-ocall-api/std",
    "itp-sgx-crypto/std",
    "itp-sgx-externalities/std",
    "itp-stf-executor/std",
    "itp-stf-state-handler/std",
    "thiserror",
]
development = []
